C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE INITDEVICE
OBJECT MODULE PLACED IN .\src/InitDevice.OBJ
COMPILER INVOKED BY: Z:\Applications\Simplicity Studio.app\Contents\Eclipse\developer\toolchains\keil_8051\9.60\BIN\C51.
                    -exe /Users/danjulio/SimplicityStudio/v4_workspace/SolarMpptCharger/src/InitDevice.c OMF2 COMPACT DEBUG OBJECTEXTEND ROM(
                    -LARGE) WARNINGLEVEL(2) FLOATFUZZY(3) OPTIMIZE(9,SPEED) DEFINE(NDEBUG=1) INTVECTOR(0X0000) INTPROMOTE INCDIR(/Users/danju
                    -lio/SimplicityStudio/v4_workspace/SolarMpptCharger/inc;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sd
                    -ks/8051/v4.1.7//Device/shared/si8051Base;/Applications/Simplicity Studio.app/Contents/Eclipse/developer/sdks/8051/v4.1.7
                    -//Device/EFM8SB1/inc) REGFILE(SolarMpptCharger.ORC) PRINT(.\src/InitDevice.lst) COND SYMBOLS CODE PAGEWIDTH(120) PAGELEN
                    -GTH(65) OBJECT(.\src/InitDevice.OBJ)

line level    source

   1          //=========================================================
   2          // src/InitDevice.c: generated by Hardware Configurator
   3          //
   4          // This file will be regenerated when saving a document.
   5          // leave the sections inside the "$[...]" comment tags alone
   6          // or they will be overwritten!
   7          //=========================================================
   8          
   9          // USER INCLUDES
  10          #include <SI_EFM8SB1_Register_Enums.h>
  11          #include "InitDevice.h"
  12          
  13          //=============================================================================
  14          // Automatically generated line:
  15          //   PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
  16          // must be deleted in the three subroutines
  17          //   PCACH_0_enter_DefaultMode_from_RESET (twice)
  18          //   PCACH_1_enter_DefaultMode_from_RESET (twice)
  19          //   PCACH_2_enter_DefaultMode_from_RESET
  20          // to enable 10-bit PWM (they are erroneously included by the configurator)
  21          //=============================================================================
  22          
  23          // USER PROTOTYPES
  24          // USER FUNCTIONS
  25          
  26          // $[Library Includes]
  27          // [Library Includes]$
  28          
  29          //==============================================================================
  30          // enter_DefaultMode_from_RESET
  31          //==============================================================================
  32          extern void enter_DefaultMode_from_RESET(void) {
  33   1              // $[Config Calls]
  34   1              // Save the SFRPAGE
  35   1              uint8_t SFRPAGE_save = SFRPAGE;
  36   1              PCA_0_enter_DefaultMode_from_RESET();
  37   1              PCACH_0_enter_DefaultMode_from_RESET();
  38   1              PCACH_1_enter_DefaultMode_from_RESET();
  39   1              PCACH_2_enter_DefaultMode_from_RESET();
  40   1              VREG_0_enter_DefaultMode_from_RESET();
  41   1              PORTS_0_enter_DefaultMode_from_RESET();
  42   1              PORTS_1_enter_DefaultMode_from_RESET();
  43   1              PBCFG_0_enter_DefaultMode_from_RESET();
  44   1              RSTSRC_0_enter_DefaultMode_from_RESET();
  45   1              HFOSC_0_enter_DefaultMode_from_RESET();
  46   1              CLOCK_0_enter_DefaultMode_from_RESET();
  47   1              FLASH_0_enter_DefaultMode_from_RESET();
  48   1              TIMER01_0_enter_DefaultMode_from_RESET();
  49   1              TIMER16_2_enter_DefaultMode_from_RESET();
  50   1              TIMER_SETUP_0_enter_DefaultMode_from_RESET();
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 2   

  51   1              ADC_0_enter_DefaultMode_from_RESET();
  52   1              VREF_0_enter_DefaultMode_from_RESET();
  53   1              SMBUS_0_enter_DefaultMode_from_RESET();
  54   1              INTERRUPT_0_enter_DefaultMode_from_RESET();
  55   1              // Restore the SFRPAGE
  56   1              SFRPAGE = SFRPAGE_save;
  57   1              // [Config Calls]$
  58   1      
  59   1      }
  60          
  61          extern void PCA_0_enter_DefaultMode_from_RESET(void) {
  62   1              // $[PCA0MD - PCA Mode]
  63   1              /***********************************************************************
  64   1               - Disable Watchdog Timer
  65   1               - System clock
  66   1               - PCA continues to function normally while the system controller is in
  67   1               Idle Mode
  68   1               - Disable the CF interrupt
  69   1               - Disable Watchdog Timer
  70   1               - Watchdog Timer Enable unlocked
  71   1               ***********************************************************************/
  72   1              SFRPAGE = 0x00;
  73   1              PCA0MD &= ~PCA0MD_WDTE__BMASK;
  74   1              PCA0MD = PCA0MD_CPS__SYSCLK | PCA0MD_CIDL__NORMAL
  75   1                              | PCA0MD_ECF__OVF_INT_DISABLED | PCA0MD_WDTE__DISABLED
  76   1                              | PCA0MD_WDLCK__UNLOCKED;
  77   1              // [PCA0MD - PCA Mode]$
  78   1      
  79   1              // $[PCA0H - PCA Counter/Timer High Byte]
  80   1              // [PCA0H - PCA Counter/Timer High Byte]$
  81   1      
  82   1              // $[PCA0L - PCA Counter/Timer Low Byte]
  83   1              // [PCA0L - PCA Counter/Timer Low Byte]$
  84   1      
  85   1              // $[PCA0PWM - PCA PWM Configuration]
  86   1              /***********************************************************************
  87   1               - 10 bits
  88   1               ***********************************************************************/
  89   1              PCA0PWM &= ~PCA0PWM_CLSEL__FMASK;
  90   1              PCA0PWM |= PCA0PWM_CLSEL__10_BITS;
  91   1              // [PCA0PWM - PCA PWM Configuration]$
  92   1      
  93   1              // $[PCA0CN0 - PCA Control 0]
  94   1              /***********************************************************************
  95   1               - Start the PCA Counter/Timer running
  96   1               ***********************************************************************/
  97   1              PCA0CN0 |= PCA0CN0_CR__RUN;
  98   1              // [PCA0CN0 - PCA Control 0]$
  99   1      
 100   1      }
 101          
 102          extern void PCACH_2_enter_DefaultMode_from_RESET(void) {
 103   1              // $[PCA0 Settings Save]
 104   1              // Select Capture/Compare register)
 105   1      //      PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 106   1              // [PCA0 Settings Save]$
 107   1      
 108   1              // $[PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]
 109   1              /***********************************************************************
 110   1               - Disable negative edge capture
 111   1               - Disable CCF2 interrupts
 112   1               - Enable match function
 113   1               - 8 to 11-bit PWM selected
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 3   

 114   1               - Disable positive edge capture
 115   1               - Disable comparator function
 116   1               - Disable PWM function
 117   1               - Disable toggle function
 118   1               ***********************************************************************/
 119   1              PCA0CPM2 = PCA0CPM2_CAPN__DISABLED | PCA0CPM2_ECCF__DISABLED
 120   1                              | PCA0CPM2_MAT__ENABLED | PCA0CPM2_PWM16__8_BIT
 121   1                              | PCA0CPM2_CAPP__DISABLED | PCA0CPM2_ECOM__DISABLED
 122   1                              | PCA0CPM2_PWM__DISABLED | PCA0CPM2_TOG__DISABLED;
 123   1              // [PCA0CPM2 - PCA Channel 2 Capture/Compare Mode]$
 124   1      
 125   1              // $[PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]
 126   1              // [PCA0CPL2 - PCA Channel 2 Capture Module Low Byte]$
 127   1      
 128   1              // $[PCA0CPH2 - PCA Channel 2 Capture Module High Byte]
 129   1              PCA0CPH2 = 0x00;
 130   1              // [PCA0CPH2 - PCA Channel 2 Capture Module High Byte]$
 131   1      
 132   1              // $[Auto-reload]
 133   1              // [Auto-reload]$
 134   1      
 135   1              // $[PCA0 Settings Restore]
 136   1              // [PCA0 Settings Restore]$
 137   1      
 138   1      }
 139          
 140          extern void PORTS_0_enter_DefaultMode_from_RESET(void) {
 141   1              // $[P0 - Port 0 Pin Latch]
 142   1              /***********************************************************************
 143   1               - P0.0 is high. Set P0.0 to drive or float high
 144   1               - P0.1 is high. Set P0.1 to drive or float high
 145   1               - P0.2 is high. Set P0.2 to drive or float high
 146   1               - P0.3 is high. Set P0.3 to drive or float high
 147   1               - P0.4 is high. Set P0.4 to drive or float high
 148   1               - P0.5 is high. Set P0.5 to drive or float high
 149   1               - P0.6 is low. Set P0.6 to drive low
 150   1               - P0.7 is high. Set P0.7 to drive or float high
 151   1               ***********************************************************************/
 152   1              P0 = P0_B0__HIGH | P0_B1__HIGH | P0_B2__HIGH | P0_B3__HIGH | P0_B4__HIGH
 153   1                              | P0_B5__HIGH | P0_B6__LOW | P0_B7__HIGH;
 154   1              // [P0 - Port 0 Pin Latch]$
 155   1      
 156   1              // $[P0MDOUT - Port 0 Output Mode]
 157   1              /***********************************************************************
 158   1               - P0.0 output is open-drain
 159   1               - P0.1 output is open-drain
 160   1               - P0.2 output is open-drain
 161   1               - P0.3 output is open-drain
 162   1               - P0.4 output is open-drain
 163   1               - P0.5 output is open-drain
 164   1               - P0.6 output is push-pull
 165   1               - P0.7 output is push-pull
 166   1               ***********************************************************************/
 167   1              P0MDOUT = P0MDOUT_B0__OPEN_DRAIN | P0MDOUT_B1__OPEN_DRAIN
 168   1                              | P0MDOUT_B2__OPEN_DRAIN | P0MDOUT_B3__OPEN_DRAIN
 169   1                              | P0MDOUT_B4__OPEN_DRAIN | P0MDOUT_B5__OPEN_DRAIN
 170   1                              | P0MDOUT_B6__PUSH_PULL | P0MDOUT_B7__PUSH_PULL;
 171   1              // [P0MDOUT - Port 0 Output Mode]$
 172   1      
 173   1              // $[P0MDIN - Port 0 Input Mode]
 174   1              /***********************************************************************
 175   1               - P0.0 pin is configured for digital mode
 176   1               - P0.1 pin is configured for analog mode
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 4   

 177   1               - P0.2 pin is configured for analog mode
 178   1               - P0.3 pin is configured for analog mode
 179   1               - P0.4 pin is configured for analog mode
 180   1               - P0.5 pin is configured for analog mode
 181   1               - P0.6 pin is configured for digital mode
 182   1               - P0.7 pin is configured for digital mode
 183   1               ***********************************************************************/
 184   1              P0MDIN = P0MDIN_B0__DIGITAL | P0MDIN_B1__ANALOG | P0MDIN_B2__ANALOG
 185   1                              | P0MDIN_B3__ANALOG | P0MDIN_B4__ANALOG | P0MDIN_B5__ANALOG
 186   1                              | P0MDIN_B6__DIGITAL | P0MDIN_B7__DIGITAL;
 187   1              // [P0MDIN - Port 0 Input Mode]$
 188   1      
 189   1              // $[P0SKIP - Port 0 Skip]
 190   1              /***********************************************************************
 191   1               - P0.0 pin is skipped by the crossbar
 192   1               - P0.1 pin is skipped by the crossbar
 193   1               - P0.2 pin is skipped by the crossbar
 194   1               - P0.3 pin is skipped by the crossbar
 195   1               - P0.4 pin is skipped by the crossbar
 196   1               - P0.5 pin is skipped by the crossbar
 197   1               - P0.6 pin is skipped by the crossbar
 198   1               - P0.7 pin is skipped by the crossbar
 199   1               ***********************************************************************/
 200   1              P0SKIP = P0SKIP_B0__SKIPPED | P0SKIP_B1__SKIPPED | P0SKIP_B2__SKIPPED
 201   1                              | P0SKIP_B3__SKIPPED | P0SKIP_B4__SKIPPED | P0SKIP_B5__SKIPPED
 202   1                              | P0SKIP_B6__SKIPPED | P0SKIP_B7__SKIPPED;
 203   1              // [P0SKIP - Port 0 Skip]$
 204   1      
 205   1              // $[P0MASK - Port 0 Mask]
 206   1              // [P0MASK - Port 0 Mask]$
 207   1      
 208   1              // $[P0MAT - Port 0 Match]
 209   1              // [P0MAT - Port 0 Match]$
 210   1      
 211   1              // $[P0DRV - Port 0 Drive Strength]
 212   1              /***********************************************************************
 213   1               - P0.0 output has low output drive strength
 214   1               - P0.1 output has low output drive strength
 215   1               - P0.2 output has low output drive strength
 216   1               - P0.3 output has low output drive strength
 217   1               - P0.4 output has low output drive strength
 218   1               - P0.5 output has low output drive strength
 219   1               - P0.6 output has high output drive strength
 220   1               - P0.7 output has high output drive strength
 221   1               ***********************************************************************/
 222   1              SFRPAGE = 0x0F;
 223   1              P0DRV = P0DRV_B0__LOW_DRIVE | P0DRV_B1__LOW_DRIVE | P0DRV_B2__LOW_DRIVE
 224   1                              | P0DRV_B3__LOW_DRIVE | P0DRV_B4__LOW_DRIVE | P0DRV_B5__LOW_DRIVE
 225   1                              | P0DRV_B6__HIGH_DRIVE | P0DRV_B7__HIGH_DRIVE;
 226   1              // [P0DRV - Port 0 Drive Strength]$
 227   1      
 228   1      }
 229          
 230          extern void PORTS_1_enter_DefaultMode_from_RESET(void) {
 231   1              // $[P1 - Port 1 Pin Latch]
 232   1              /***********************************************************************
 233   1               - P1.0 is low. Set P1.0 to drive low
 234   1               - P1.1 is high. Set P1.1 to drive or float high
 235   1               - P1.2 is high. Set P1.2 to drive or float high
 236   1               - P1.3 is high. Set P1.3 to drive or float high
 237   1               - P1.4 is high. Set P1.4 to drive or float high
 238   1               - P1.5 is high. Set P1.5 to drive or float high
 239   1               - P1.6 is low. Set P1.6 to drive low
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 5   

 240   1               - P1.7 is high. Set P1.7 to drive or float high
 241   1               ***********************************************************************/
 242   1              SFRPAGE = 0x00;
 243   1              P1 = P1_B0__LOW | P1_B1__HIGH | P1_B2__HIGH | P1_B3__HIGH | P1_B4__HIGH
 244   1                              | P1_B5__HIGH | P1_B6__LOW | P1_B7__HIGH;
 245   1              // [P1 - Port 1 Pin Latch]$
 246   1      
 247   1              // $[P1MDOUT - Port 1 Output Mode]
 248   1              /***********************************************************************
 249   1               - P1.0 output is push-pull
 250   1               - P1.1 output is open-drain
 251   1               - P1.2 output is open-drain
 252   1               - P1.3 output is push-pull
 253   1               - P1.4 output is push-pull
 254   1               - P1.5 output is open-drain
 255   1               - P1.6 output is push-pull
 256   1               - P1.7 output is open-drain
 257   1               ***********************************************************************/
 258   1              P1MDOUT = P1MDOUT_B0__PUSH_PULL | P1MDOUT_B1__OPEN_DRAIN
 259   1                              | P1MDOUT_B2__OPEN_DRAIN | P1MDOUT_B3__PUSH_PULL
 260   1                              | P1MDOUT_B4__PUSH_PULL | P1MDOUT_B5__OPEN_DRAIN
 261   1                              | P1MDOUT_B6__PUSH_PULL | P1MDOUT_B7__OPEN_DRAIN;
 262   1              // [P1MDOUT - Port 1 Output Mode]$
 263   1      
 264   1              // $[P1MDIN - Port 1 Input Mode]
 265   1              // [P1MDIN - Port 1 Input Mode]$
 266   1      
 267   1              // $[P1SKIP - Port 1 Skip]
 268   1              /***********************************************************************
 269   1               - P1.0 pin is skipped by the crossbar
 270   1               - P1.1 pin is not skipped by the crossbar
 271   1               - P1.2 pin is not skipped by the crossbar
 272   1               - P1.3 pin is not skipped by the crossbar
 273   1               - P1.4 pin is not skipped by the crossbar
 274   1               - P1.5 pin is not skipped by the crossbar
 275   1               - P1.6 pin is not skipped by the crossbar
 276   1               - P1.7 pin is not skipped by the crossbar
 277   1               ***********************************************************************/
 278   1              P1SKIP = P1SKIP_B0__SKIPPED | P1SKIP_B1__NOT_SKIPPED
 279   1                              | P1SKIP_B2__NOT_SKIPPED | P1SKIP_B3__NOT_SKIPPED
 280   1                              | P1SKIP_B4__NOT_SKIPPED | P1SKIP_B5__NOT_SKIPPED
 281   1                              | P1SKIP_B6__NOT_SKIPPED | P1SKIP_B7__NOT_SKIPPED;
 282   1              // [P1SKIP - Port 1 Skip]$
 283   1      
 284   1              // $[Missing Pin Skip]
 285   1              // [Missing Pin Skip]$
 286   1      
 287   1              // $[P1MASK - Port 1 Mask]
 288   1              // [P1MASK - Port 1 Mask]$
 289   1      
 290   1              // $[P1MAT - Port 1 Match]
 291   1              // [P1MAT - Port 1 Match]$
 292   1      
 293   1              // $[P1DRV - Port 1 Drive Strength]
 294   1              /***********************************************************************
 295   1               - P1.0 output has high output drive strength
 296   1               - P1.1 output has low output drive strength
 297   1               - P1.2 output has low output drive strength
 298   1               - P1.3 output has high output drive strength
 299   1               - P1.4 output has high output drive strength
 300   1               - P1.5 output has low output drive strength
 301   1               - P1.6 output has low output drive strength
 302   1               - P1.7 output has low output drive strength
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 6   

 303   1               ***********************************************************************/
 304   1              SFRPAGE = 0x0F;
 305   1              P1DRV = P1DRV_B0__HIGH_DRIVE | P1DRV_B1__LOW_DRIVE | P1DRV_B2__LOW_DRIVE
 306   1                              | P1DRV_B3__HIGH_DRIVE | P1DRV_B4__HIGH_DRIVE | P1DRV_B5__LOW_DRIVE
 307   1                              | P1DRV_B6__LOW_DRIVE | P1DRV_B7__LOW_DRIVE;
 308   1              // [P1DRV - Port 1 Drive Strength]$
 309   1      
 310   1      }
 311          
 312          extern void PBCFG_0_enter_DefaultMode_from_RESET(void) {
 313   1              // $[XBR2 - Port I/O Crossbar 2]
 314   1              /***********************************************************************
 315   1               - Weak Pullups enabled 
 316   1               - Crossbar enabled
 317   1               ***********************************************************************/
 318   1              SFRPAGE = 0x00;
 319   1              XBR2 = XBR2_WEAKPUD__PULL_UPS_ENABLED | XBR2_XBARE__ENABLED;
 320   1              // [XBR2 - Port I/O Crossbar 2]$
 321   1      
 322   1              // $[XBR0 - Port I/O Crossbar 0]
 323   1              /***********************************************************************
 324   1               - UART I/O unavailable at Port pin
 325   1               - SPI I/O unavailable at Port pins
 326   1               - SMBus 0 I/O routed to Port pins
 327   1               - CP0 unavailable at Port pin
 328   1               - Asynchronous CP0 unavailable at Port pin
 329   1               - SYSCLK unavailable at Port pin
 330   1               ***********************************************************************/
 331   1              XBR0 = XBR0_URT0E__DISABLED | XBR0_SPI0E__DISABLED | XBR0_SMB0E__ENABLED
 332   1                              | XBR0_CP0E__DISABLED | XBR0_CP0AE__DISABLED
 333   1                              | XBR0_SYSCKE__DISABLED;
 334   1              // [XBR0 - Port I/O Crossbar 0]$
 335   1      
 336   1              // $[XBR1 - Port I/O Crossbar 1]
 337   1              /***********************************************************************
 338   1               - CEX0, CEX1 routed to Port pins
 339   1               - ECI unavailable at Port pin
 340   1               - T0 unavailable at Port pin
 341   1               - T1 unavailable at Port pin
 342   1               ***********************************************************************/
 343   1              XBR1 = XBR1_PCA0ME__CEX0_CEX1 | XBR1_ECIE__DISABLED | XBR1_T0E__DISABLED
 344   1                              | XBR1_T1E__DISABLED;
 345   1              // [XBR1 - Port I/O Crossbar 1]$
 346   1      
 347   1      }
 348          
 349          extern void ADC_0_enter_DefaultMode_from_RESET(void) {
 350   1              // $[ADC0MX - ADC0 Multiplexer Selection]
 351   1              /***********************************************************************
 352   1               - Select channel ADC0.5
 353   1               ***********************************************************************/
 354   1              ADC0MX = ADC0MX_ADC0MX__ADC0P5;
 355   1              // [ADC0MX - ADC0 Multiplexer Selection]$
 356   1      
 357   1              // $[ADC0AC - ADC0 Accumulator Configuration]
 358   1              /***********************************************************************
 359   1               - Perform and Accumulate 4 conversions 
 360   1               - Enable 12-bit mode
 361   1               - ADC0H:ADC0L contain the result of the latest conversion when Burst
 362   1               Mode is disabled
 363   1               - Right justified. No shifting applied
 364   1               ***********************************************************************/
 365   1              ADC0AC = ADC0AC_ADRPT__ACC_4 | ADC0AC_AD12BE__12_BIT_ENABLED
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 7   

 366   1                              | ADC0AC_ADAE__ACC_DISABLED | ADC0AC_ADSJST__RIGHT_NO_SHIFT;
 367   1              // [ADC0AC - ADC0 Accumulator Configuration]$
 368   1      
 369   1              // $[ADC0TK - ADC0 Burst Mode Track Time]
 370   1              // [ADC0TK - ADC0 Burst Mode Track Time]$
 371   1      
 372   1              // $[ADC0PWR - ADC0 Power Control]
 373   1              /***********************************************************************
 374   1               - Burst Mode Power Up Time = 0x02
 375   1               - Disable low power mode
 376   1               ***********************************************************************/
 377   1              ADC0PWR = (0x02 << ADC0PWR_ADPWR__SHIFT)
 378   1                              | ADC0PWR_ADLPM__LOW_POWER_DISABLED;
 379   1              // [ADC0PWR - ADC0 Power Control]$
 380   1      
 381   1              // $[ADC0CF - ADC0 Configuration]
 382   1              /***********************************************************************
 383   1               - ADC0 operates in 10-bit or 12-bit mode 
 384   1               - The on-chip PGA gain is 1
 385   1               - SAR Clock Divider = 0x02
 386   1               - Delayed Track Mode
 387   1               ***********************************************************************/
 388   1              ADC0CF = ADC0CF_AD8BE__NORMAL | ADC0CF_ADGN__GAIN_1
 389   1                              | (0x02 << ADC0CF_ADSC__SHIFT) | ADC0CF_ADTM__TRACK_DELAYED;
 390   1              // [ADC0CF - ADC0 Configuration]$
 391   1      
 392   1              // $[ADC0GTH - ADC0 Greater-Than High Byte]
 393   1              /***********************************************************************
 394   1               - Greater-Than High Byte = 0x00
 395   1               ***********************************************************************/
 396   1              ADC0GTH = (0x00 << ADC0GTH_ADC0GTH__SHIFT);
 397   1              // [ADC0GTH - ADC0 Greater-Than High Byte]$
 398   1      
 399   1              // $[ADC0GTL - ADC0 Greater-Than Low Byte]
 400   1              /***********************************************************************
 401   1               - Greater-Than Low Byte = 0x00
 402   1               ***********************************************************************/
 403   1              ADC0GTL = (0x00 << ADC0GTL_ADC0GTL__SHIFT);
 404   1              // [ADC0GTL - ADC0 Greater-Than Low Byte]$
 405   1      
 406   1              // $[ADC0LTH - ADC0 Less-Than High Byte]
 407   1              // [ADC0LTH - ADC0 Less-Than High Byte]$
 408   1      
 409   1              // $[ADC0LTL - ADC0 Less-Than Low Byte]
 410   1              // [ADC0LTL - ADC0 Less-Than Low Byte]$
 411   1      
 412   1              // $[ADC0CN0 - ADC0 Control 0]
 413   1              /***********************************************************************
 414   1               - Enable ADC0 
 415   1               - Enable ADC0 burst mode
 416   1               ***********************************************************************/
 417   1              ADC0CN0 |= ADC0CN0_ADEN__ENABLED | ADC0CN0_ADBMEN__BURST_ENABLED;
 418   1              // [ADC0CN0 - ADC0 Control 0]$
 419   1      
 420   1      }
 421          
 422          extern void PCACH_0_enter_DefaultMode_from_RESET(void) {
 423   1              // $[PCA0 Settings Save]
 424   1              // Select Capture/Compare register)
 425   1      //      PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 426   1              // [PCA0 Settings Save]$
 427   1      
 428   1              // $[PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 8   

 429   1              /***********************************************************************
 430   1               - Disable negative edge capture
 431   1               - Disable CCF0 interrupts
 432   1               - Disable match function
 433   1               - 8 to 11-bit PWM selected
 434   1               - Disable positive edge capture
 435   1               - Enable comparator function
 436   1               - Enable PWM function
 437   1               - Disable toggle function
 438   1               ***********************************************************************/
 439   1              PCA0CPM0 = PCA0CPM0_CAPN__DISABLED | PCA0CPM0_ECCF__DISABLED
 440   1                              | PCA0CPM0_MAT__DISABLED | PCA0CPM0_PWM16__8_BIT
 441   1                              | PCA0CPM0_CAPP__DISABLED | PCA0CPM0_ECOM__ENABLED
 442   1                              | PCA0CPM0_PWM__ENABLED | PCA0CPM0_TOG__DISABLED;
 443   1              // [PCA0CPM0 - PCA Channel 0 Capture/Compare Mode]$
 444   1      
 445   1              // $[PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]
 446   1              // [PCA0CPL0 - PCA Channel 0 Capture Module Low Byte]$
 447   1      
 448   1              // $[PCA0CPH0 - PCA Channel 0 Capture Module High Byte]
 449   1              PCA0CPH0 = 0x00;
 450   1              // [PCA0CPH0 - PCA Channel 0 Capture Module High Byte]$
 451   1      
 452   1              // $[Auto-reload]
 453   1              PCA0PWM |= PCA0PWM_ARSEL__AUTORELOAD;
 454   1      
 455   1      //      PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 456   1              // [Auto-reload]$
 457   1      
 458   1              // $[PCA0 Settings Restore]
 459   1              // [PCA0 Settings Restore]$
 460   1      
 461   1      }
 462          
 463          extern void PCACH_1_enter_DefaultMode_from_RESET(void) {
 464   1              // $[PCA0 Settings Save]
 465   1              // Select Capture/Compare register)
 466   1      //      PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 467   1              // [PCA0 Settings Save]$
 468   1      
 469   1              // $[PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]
 470   1              /***********************************************************************
 471   1               - Disable negative edge capture
 472   1               - Disable CCF1 interrupts
 473   1               - Disable match function
 474   1               - 8 to 11-bit PWM selected
 475   1               - Disable positive edge capture
 476   1               - Enable comparator function
 477   1               - Enable PWM function
 478   1               - Disable toggle function
 479   1               ***********************************************************************/
 480   1              PCA0CPM1 = PCA0CPM1_CAPN__DISABLED | PCA0CPM1_ECCF__DISABLED
 481   1                              | PCA0CPM1_MAT__DISABLED | PCA0CPM1_PWM16__8_BIT
 482   1                              | PCA0CPM1_CAPP__DISABLED | PCA0CPM1_ECOM__ENABLED
 483   1                              | PCA0CPM1_PWM__ENABLED | PCA0CPM1_TOG__DISABLED;
 484   1              // [PCA0CPM1 - PCA Channel 1 Capture/Compare Mode]$
 485   1      
 486   1              // $[PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]
 487   1              // [PCA0CPL1 - PCA Channel 1 Capture Module Low Byte]$
 488   1      
 489   1              // $[PCA0CPH1 - PCA Channel 1 Capture Module High Byte]
 490   1              PCA0CPH1 = 0x00;
 491   1              // [PCA0CPH1 - PCA Channel 1 Capture Module High Byte]$
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 9   

 492   1      
 493   1              // $[Auto-reload]
 494   1              PCA0PWM |= PCA0PWM_ARSEL__AUTORELOAD;
 495   1      
 496   1      //      PCA0PWM &= ~PCA0PWM_ARSEL__BMASK;
 497   1              // [Auto-reload]$
 498   1      
 499   1              // $[PCA0 Settings Restore]
 500   1              // [PCA0 Settings Restore]$
 501   1      
 502   1      }
 503          
 504          extern void VREG_0_enter_DefaultMode_from_RESET(void) {
 505   1              // $[REG0CN - Voltage Regulator Control]
 506   1              /***********************************************************************
 507   1               - Enable the precision High Frequency Oscillator bias
 508   1               ***********************************************************************/
 509   1              REG0CN = REG0CN_OSCBIAS__ENABLED;
 510   1              // [REG0CN - Voltage Regulator Control]$
 511   1      
 512   1      }
 513          
 514          extern void RSTSRC_0_enter_DefaultMode_from_RESET(void) {
 515   1              // $[RSTSRC - Reset Source]
 516   1              /***********************************************************************
 517   1               - A power-on or supply monitor reset occurred
 518   1               - A missing clock detector reset did not occur
 519   1               - A Comparator 0 reset did not occur
 520   1               - A RTC alarm or oscillator fail reset did not occur
 521   1               ***********************************************************************/
 522   1              RSTSRC = RSTSRC_PORSF__SET | RSTSRC_MCDRSF__NOT_SET | RSTSRC_C0RSEF__NOT_SET
 523   1                              | RSTSRC_RTC0RE__NOT_SET;
 524   1              // [RSTSRC - Reset Source]$
 525   1      
 526   1      }
 527          
 528          extern void HFOSC_0_enter_DefaultMode_from_RESET(void) {
 529   1              // $[HFO#CAL - High Frequency Oscillator Calibration]
 530   1              // [HFO#CAL - High Frequency Oscillator Calibration]$
 531   1      
 532   1              // $[HFO#CN - High Frequency Oscillator Control]
 533   1              /***********************************************************************
 534   1               - High Frequency Oscillator enabled
 535   1               ***********************************************************************/
 536   1              HFO0CN |= HFO0CN_IOSCEN__ENABLED;
 537   1              // [HFO#CN - High Frequency Oscillator Control]$
 538   1      
 539   1              // $[Oscillator Ready]
 540   1              while ((HFO0CN & HFO0CN_IFRDY__BMASK) == HFO0CN_IFRDY__NOT_SET)
 541   1                      ;
 542   1              // [Oscillator Ready]$
 543   1      
 544   1      }
 545          
 546          extern void CLOCK_0_enter_DefaultMode_from_RESET(void) {
 547   1              // $[CLKSEL - Clock Select]
 548   1              /***********************************************************************
 549   1               - SYSCLK is equal to selected clock source divided by 1
 550   1               - Clock derived from the internal precision High-Frequency Oscillator
 551   1               ***********************************************************************/
 552   1              CLKSEL = CLKSEL_CLKDIV__SYSCLK_DIV_1 | CLKSEL_CLKSL__HFOSC;
 553   1              // Wait for the clock to be ready
 554   1              while ((CLKSEL & CLKSEL_CLKRDY__BMASK) != CLKSEL_CLKRDY__SET)
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 10  

 555   1                      ;
 556   1              // [CLKSEL - Clock Select]$
 557   1      
 558   1      }
 559          
 560          extern void TIMER01_0_enter_DefaultMode_from_RESET(void) {
 561   1              // $[Timer Initialization]
 562   1              //Save Timer Configuration
 563   1              uint8_t TCON_save;
 564   1              TCON_save = TCON;
 565   1              //Stop Timers
 566   1              TCON &= ~TCON_TR0__BMASK & ~TCON_TR1__BMASK;
 567   1      
 568   1              // [Timer Initialization]$
 569   1      
 570   1              // $[TH0 - Timer 0 High Byte]
 571   1              /***********************************************************************
 572   1               - Timer 0 High Byte = 0x80
 573   1               ***********************************************************************/
 574   1              TH0 = (0x80 << TH0_TH0__SHIFT);
 575   1              // [TH0 - Timer 0 High Byte]$
 576   1      
 577   1              // $[TL0 - Timer 0 Low Byte]
 578   1              // [TL0 - Timer 0 Low Byte]$
 579   1      
 580   1              // $[TH1 - Timer 1 High Byte]
 581   1              // [TH1 - Timer 1 High Byte]$
 582   1      
 583   1              // $[TL1 - Timer 1 Low Byte]
 584   1              // [TL1 - Timer 1 Low Byte]$
 585   1      
 586   1              // $[Timer Restoration]
 587   1              //Restore Timer Configuration
 588   1              TCON |= (TCON_save & TCON_TR0__BMASK) | (TCON_save & TCON_TR1__BMASK);
 589   1      
 590   1              // [Timer Restoration]$
 591   1      
 592   1      }
 593          
 594          extern void TIMER16_2_enter_DefaultMode_from_RESET(void) {
 595   1              // $[Timer Initialization]
 596   1              // Save Timer Configuration
 597   1              uint8_t TMR2CN0_TR2_save;
 598   1              TMR2CN0_TR2_save = TMR2CN0 & TMR2CN0_TR2__BMASK;
 599   1              // Stop Timer
 600   1              TMR2CN0 &= ~(TMR2CN0_TR2__BMASK);
 601   1              // [Timer Initialization]$
 602   1      
 603   1              // $[TMR2CN0 - Timer 2 Control]
 604   1              // [TMR2CN0 - Timer 2 Control]$
 605   1      
 606   1              // $[TMR2H - Timer 2 High Byte]
 607   1              /***********************************************************************
 608   1               - Timer 2 High Byte = 0xB0
 609   1               ***********************************************************************/
 610   1              TMR2H = (0xB0 << TMR2H_TMR2H__SHIFT);
 611   1              // [TMR2H - Timer 2 High Byte]$
 612   1      
 613   1              // $[TMR2L - Timer 2 Low Byte]
 614   1              /***********************************************************************
 615   1               - Timer 2 Low Byte = 0x3F
 616   1               ***********************************************************************/
 617   1              TMR2L = (0x3F << TMR2L_TMR2L__SHIFT);
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 11  

 618   1              // [TMR2L - Timer 2 Low Byte]$
 619   1      
 620   1              // $[TMR2RLH - Timer 2 Reload High Byte]
 621   1              /***********************************************************************
 622   1               - Timer 2 Reload High Byte = 0xB0
 623   1               ***********************************************************************/
 624   1              TMR2RLH = (0xB0 << TMR2RLH_TMR2RLH__SHIFT);
 625   1              // [TMR2RLH - Timer 2 Reload High Byte]$
 626   1      
 627   1              // $[TMR2RLL - Timer 2 Reload Low Byte]
 628   1              /***********************************************************************
 629   1               - Timer 2 Reload Low Byte = 0x3F
 630   1               ***********************************************************************/
 631   1              TMR2RLL = (0x3F << TMR2RLL_TMR2RLL__SHIFT);
 632   1              // [TMR2RLL - Timer 2 Reload Low Byte]$
 633   1      
 634   1              // $[TMR2CN0]
 635   1              /***********************************************************************
 636   1               - Start Timer 2 running
 637   1               ***********************************************************************/
 638   1              TMR2CN0 |= TMR2CN0_TR2__RUN;
 639   1              // [TMR2CN0]$
 640   1      
 641   1              // $[Timer Restoration]
 642   1              // Restore Timer Configuration
 643   1              TMR2CN0 |= TMR2CN0_TR2_save;
 644   1              // [Timer Restoration]$
 645   1      
 646   1      }
 647          
 648          extern void TIMER_SETUP_0_enter_DefaultMode_from_RESET(void) {
 649   1              // $[CKCON0 - Clock Control 0]
 650   1              /***********************************************************************
 651   1               - System clock divided by 48
 652   1               - Counter/Timer 0 uses the clock defined by the prescale field, SCA
 653   1               - Timer 2 high byte uses the clock defined by T2XCLK in TMR2CN0
 654   1               - Timer 2 low byte uses the clock defined by T2XCLK in TMR2CN0
 655   1               - Timer 3 high byte uses the clock defined by T3XCLK in TMR3CN0
 656   1               - Timer 3 low byte uses the clock defined by T3XCLK in TMR3CN0
 657   1               - Timer 1 uses the clock defined by the prescale field, SCA
 658   1               ***********************************************************************/
 659   1              CKCON0 = CKCON0_SCA__SYSCLK_DIV_48 | CKCON0_T0M__PRESCALE
 660   1                              | CKCON0_T2MH__EXTERNAL_CLOCK | CKCON0_T2ML__EXTERNAL_CLOCK
 661   1                              | CKCON0_T3MH__EXTERNAL_CLOCK | CKCON0_T3ML__EXTERNAL_CLOCK
 662   1                              | CKCON0_T1M__PRESCALE;
 663   1              // [CKCON0 - Clock Control 0]$
 664   1      
 665   1              // $[TMOD - Timer 0/1 Mode]
 666   1              /***********************************************************************
 667   1               - Mode 2, 8-bit Counter/Timer with Auto-Reload
 668   1               - Mode 0, 13-bit Counter/Timer
 669   1               - Timer Mode
 670   1               - Timer 0 enabled when TR0 = 1 irrespective of INT0 logic level
 671   1               - Timer Mode
 672   1               - Timer 1 enabled when TR1 = 1 irrespective of INT1 logic level
 673   1               ***********************************************************************/
 674   1              TMOD = TMOD_T0M__MODE2 | TMOD_T1M__MODE0 | TMOD_CT0__TIMER
 675   1                              | TMOD_GATE0__DISABLED | TMOD_CT1__TIMER | TMOD_GATE1__DISABLED;
 676   1              // [TMOD - Timer 0/1 Mode]$
 677   1      
 678   1              // $[TCON - Timer 0/1 Control]
 679   1              // [TCON - Timer 0/1 Control]$
 680   1      
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 12  

 681   1      }
 682          
 683          extern void VREF_0_enter_DefaultMode_from_RESET(void) {
 684   1              // $[REF0CN - Voltage Reference Control]
 685   1              /***********************************************************************
 686   1               - Enable the Temperature Sensor
 687   1               - The ADC0 ground reference is the GND pin
 688   1               - The ADC0 voltage reference is the internal 1.65 V high speed voltage
 689   1               reference
 690   1               ***********************************************************************/
 691   1              REF0CN = REF0CN_TEMPE__TEMP_ENABLED | REF0CN_GNDSL__GND_PIN
 692   1                              | REF0CN_REFSL__HIGH_SPEED_VREF;
 693   1              // [REF0CN - Voltage Reference Control]$
 694   1      
 695   1      }
 696          
 697          extern void SMBUS_0_enter_DefaultMode_from_RESET(void) {
 698   1              // $[SMB0ADR - SMBus 0 Slave Address]
 699   1              /***********************************************************************
 700   1               - General Call Address is ignored
 701   1               - SMBus Hardware Slave Address = 0x12
 702   1               ***********************************************************************/
 703   1              SMB0ADR = SMB0ADR_GC__IGNORED | (0x12 << SMB0ADR_SLV__SHIFT);
 704   1              // [SMB0ADR - SMBus 0 Slave Address]$
 705   1      
 706   1              // $[SMB0ADM - SMBus 0 Slave Address Mask]
 707   1              /***********************************************************************
 708   1               - Automatic slave address recognition and hardware acknowledge is
 709   1               enabled
 710   1               - SMBus Slave Address Mask = 0x7F
 711   1               ***********************************************************************/
 712   1              SMB0ADM = SMB0ADM_EHACK__ADR_ACK_AUTOMATIC | (0x7F << SMB0ADM_SLVM__SHIFT);
 713   1              // [SMB0ADM - SMBus 0 Slave Address Mask]$
 714   1      
 715   1              // $[SMB0CF - SMBus 0 Configuration]
 716   1              /***********************************************************************
 717   1               - Timer 1 Overflow
 718   1               - Enable the SMBus module
 719   1               ***********************************************************************/
 720   1              SMB0CF &= ~SMB0CF_SMBCS__FMASK;
 721   1              SMB0CF |= SMB0CF_SMBCS__TIMER1 | SMB0CF_ENSMB__ENABLED;
 722   1              // [SMB0CF - SMBus 0 Configuration]$
 723   1      
 724   1      }
 725          
 726          extern void INTERRUPT_0_enter_DefaultMode_from_RESET(void) {
 727   1              // $[EIE1 - Extended Interrupt Enable 1]
 728   1              /***********************************************************************
 729   1               - Disable ADC0 Conversion Complete interrupt
 730   1               - Disable ADC0 Window Comparison interrupt
 731   1               - Disable CP0 interrupts
 732   1               - Disable all PCA0 interrupts
 733   1               - Disable RTC Alarm interrupts
 734   1               - Enable interrupt requests generated by SMB0
 735   1               - Disable Timer 3 interrupts
 736   1               ***********************************************************************/
 737   1              EIE1 = EIE1_EADC0__DISABLED | EIE1_EWADC0__DISABLED | EIE1_ECP0__DISABLED
 738   1                              | EIE1_EPCA0__DISABLED | EIE1_ERTC0A__DISABLED | EIE1_ESMB0__ENABLED
 739   1                              | EIE1_ET3__DISABLED;
 740   1              // [EIE1 - Extended Interrupt Enable 1]$
 741   1      
 742   1              // $[EIP1 - Extended Interrupt Priority 1]
 743   1              /***********************************************************************
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 13  

 744   1               - ADC0 Conversion Complete interrupt set to low priority level
 745   1               - ADC0 Window interrupt set to low priority level
 746   1               - CP0 interrupt set to low priority level
 747   1               - PCA0 interrupt set to low priority level
 748   1               - RTC Alarm interrupt set to low priority level
 749   1               - SMB0 interrupt set to high priority level
 750   1               - Timer 3 interrupts set to low priority level
 751   1               ***********************************************************************/
 752   1              EIP1 = EIP1_PADC0__LOW | EIP1_PWADC0__LOW | EIP1_PCP0__LOW | EIP1_PPCA0__LOW
 753   1                              | EIP1_PRTC0A__LOW | EIP1_PSMB0__HIGH | EIP1_PT3__LOW;
 754   1              // [EIP1 - Extended Interrupt Priority 1]$
 755   1      
 756   1              // $[IE - Interrupt Enable]
 757   1              /***********************************************************************
 758   1               - Enable each interrupt according to its individual mask setting
 759   1               - Disable external interrupt 0
 760   1               - Disable external interrupt 1
 761   1               - Disable all SPI0 interrupts
 762   1               - Enable interrupt requests generated by the TF0 flag
 763   1               - Disable all Timer 1 interrupt
 764   1               - Enable interrupt requests generated by the TF2L or TF2H flags
 765   1               - Disable UART0 interrupt
 766   1               ***********************************************************************/
 767   1              IE = IE_EA__ENABLED | IE_EX0__DISABLED | IE_EX1__DISABLED
 768   1                              | IE_ESPI0__DISABLED | IE_ET0__ENABLED | IE_ET1__DISABLED
 769   1                              | IE_ET2__ENABLED | IE_ES0__DISABLED;
 770   1              // [IE - Interrupt Enable]$
 771   1      
 772   1              // $[IP - Interrupt Priority]
 773   1              // [IP - Interrupt Priority]$
 774   1      
 775   1              // $[EIE2 - Extended Interrupt Enable 2]
 776   1              // [EIE2 - Extended Interrupt Enable 2]$
 777   1      
 778   1              // $[EIP2 - Extended Interrupt Priority 2]
 779   1              // [EIP2 - Extended Interrupt Priority 2]$
 780   1      
 781   1      }
 782          
 783          extern void FLASH_0_enter_DefaultMode_from_RESET(void) {
 784   1              // $[FLSCL - Flash Scale]
 785   1              /***********************************************************************
 786   1               - The system clock determines the flash read time
 787   1               ***********************************************************************/
 788   1              FLSCL = FLSCL_BYPASS__SYSCLK;
 789   1              // [FLSCL - Flash Scale]$
 790   1      
 791   1      }
 792          
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 14  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 32
                                           ; SOURCE LINE # 35
0000 7800        R     MOV     R0,#LOW SFRPAGE_save
0002 E5A7              MOV     A,SFRPAGE
0004 F2                MOVX    @R0,A
                                           ; SOURCE LINE # 36
0005 120000      R     LCALL   PCA_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 37
0008 120000      R     LCALL   PCACH_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 38
000B 120000      R     LCALL   PCACH_1_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 39
000E 120000      R     LCALL   PCACH_2_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 40
0011 120000      R     LCALL   VREG_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 41
0014 120000      R     LCALL   PORTS_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 42
0017 120000      R     LCALL   PORTS_1_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 43
001A 120000      R     LCALL   PBCFG_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 44
001D 120000      R     LCALL   RSTSRC_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 45
0020 120000      R     LCALL   HFOSC_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 46
0023 120000      R     LCALL   CLOCK_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 47
0026 120000      R     LCALL   FLASH_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 48
0029 120000      R     LCALL   TIMER01_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 49
002C 120000      R     LCALL   TIMER16_2_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 50
002F 120000      R     LCALL   TIMER_SETUP_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 51
0032 120000      R     LCALL   ADC_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 52
0035 120000      R     LCALL   VREF_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 53
0038 120000      R     LCALL   SMBUS_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 54
003B 120000      R     LCALL   INTERRUPT_0_enter_DefaultMode_from_RESET
                                           ; SOURCE LINE # 56
003E 7800        R     MOV     R0,#LOW SFRPAGE_save
0040 E2                MOVX    A,@R0
0041 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 59
0043 22                RET     
             ; FUNCTION enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCA_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 61
                                           ; SOURCE LINE # 72
0000 E4                CLR     A
0001 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 73
0003 53D9BF            ANL     PCA0MD,#0BFH
                                           ; SOURCE LINE # 74
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 15  

0006 75D908            MOV     PCA0MD,#08H
                                           ; SOURCE LINE # 89
0009 53DFFC            ANL     PCA0PWM,#0FCH
                                           ; SOURCE LINE # 90
000C 43DF02            ORL     PCA0PWM,#02H
                                           ; SOURCE LINE # 97
000F 43D840            ORL     PCA0CN0,#040H
                                           ; SOURCE LINE # 100
0012 22                RET     
             ; FUNCTION PCA_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCACH_2_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 102
                                           ; SOURCE LINE # 119
0000 75DC08            MOV     PCA0CPM2,#08H
                                           ; SOURCE LINE # 129
0003 E4                CLR     A
0004 F5EC              MOV     PCA0CPH2,A
                                           ; SOURCE LINE # 138
0006 22                RET     
             ; FUNCTION PCACH_2_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PORTS_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 152
0000 7580BF            MOV     P0,#0BFH
                                           ; SOURCE LINE # 167
0003 75A4C0            MOV     P0MDOUT,#0C0H
                                           ; SOURCE LINE # 184
0006 75F1C1            MOV     P0MDIN,#0C1H
                                           ; SOURCE LINE # 200
0009 75D4FF            MOV     P0SKIP,#0FFH
                                           ; SOURCE LINE # 222
000C 75A70F            MOV     SFRPAGE,#0FH
                                           ; SOURCE LINE # 223
000F 7599C0            MOV     P0DRV,#0C0H
                                           ; SOURCE LINE # 228
0012 22                RET     
             ; FUNCTION PORTS_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PORTS_1_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 230
                                           ; SOURCE LINE # 242
0000 E4                CLR     A
0001 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 243
0003 7590BE            MOV     P1,#0BEH
                                           ; SOURCE LINE # 258
0006 75A559            MOV     P1MDOUT,#059H
                                           ; SOURCE LINE # 278
0009 75D501            MOV     P1SKIP,#01H
                                           ; SOURCE LINE # 304
000C 75A70F            MOV     SFRPAGE,#0FH
                                           ; SOURCE LINE # 305
000F 759B19            MOV     P1DRV,#019H
                                           ; SOURCE LINE # 310
0012 22                RET     
             ; FUNCTION PORTS_1_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PBCFG_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 318
0000 E4                CLR     A
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 16  

0001 F5A7              MOV     SFRPAGE,A
                                           ; SOURCE LINE # 319
0003 75E340            MOV     XBR2,#040H
                                           ; SOURCE LINE # 331
0006 75E104            MOV     XBR0,#04H
                                           ; SOURCE LINE # 343
0009 75E202            MOV     XBR1,#02H
                                           ; SOURCE LINE # 347
000C 22                RET     
             ; FUNCTION PBCFG_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION ADC_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 349
                                           ; SOURCE LINE # 354
0000 759605            MOV     ADC0MX,#05H
                                           ; SOURCE LINE # 365
0003 75BA81            MOV     ADC0AC,#081H
                                           ; SOURCE LINE # 377
0006 75BB02            MOV     ADC0PWR,#02H
                                           ; SOURCE LINE # 388
0009 759713            MOV     ADC0CF,#013H
                                           ; SOURCE LINE # 396
000C E4                CLR     A
000D F5C4              MOV     ADC0GTH,A
                                           ; SOURCE LINE # 403
000F F5C3              MOV     ADC0GTL,A
                                           ; SOURCE LINE # 417
0011 43E8C0            ORL     ADC0CN0,#0C0H
                                           ; SOURCE LINE # 420
0014 22                RET     
             ; FUNCTION ADC_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCACH_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 422
                                           ; SOURCE LINE # 439
0000 75DA42            MOV     PCA0CPM0,#042H
                                           ; SOURCE LINE # 449
0003 E4                CLR     A
0004 F5FC              MOV     PCA0CPH0,A
                                           ; SOURCE LINE # 453
0006 43DF80            ORL     PCA0PWM,#080H
                                           ; SOURCE LINE # 461
0009 22                RET     
             ; FUNCTION PCACH_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION PCACH_1_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 463
                                           ; SOURCE LINE # 480
0000 75DB42            MOV     PCA0CPM1,#042H
                                           ; SOURCE LINE # 490
0003 E4                CLR     A
0004 F5EA              MOV     PCA0CPH1,A
                                           ; SOURCE LINE # 494
0006 43DF80            ORL     PCA0PWM,#080H
                                           ; SOURCE LINE # 502
0009 22                RET     
             ; FUNCTION PCACH_1_enter_DefaultMode_from_RESET (END)

             ; FUNCTION VREG_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 504
                                           ; SOURCE LINE # 509
0000 75C910            MOV     REG0CN,#010H
                                           ; SOURCE LINE # 512
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 17  

0003 22                RET     
             ; FUNCTION VREG_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION RSTSRC_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 514
                                           ; SOURCE LINE # 522
0000 75EF02            MOV     RSTSRC,#02H
                                           ; SOURCE LINE # 526
0003 22                RET     
             ; FUNCTION RSTSRC_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION HFOSC_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 528
                                           ; SOURCE LINE # 536
0000 43B280            ORL     HFO0CN,#080H
0003         ?C0012:
                                           ; SOURCE LINE # 540
0003 E5B2              MOV     A,HFO0CN
0005 5440              ANL     A,#040H
0007 60FA              JZ      ?C0012
                                           ; SOURCE LINE # 544
0009 22                RET     
             ; FUNCTION HFOSC_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION CLOCK_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 546
                                           ; SOURCE LINE # 552
0000 E4                CLR     A
0001 F5A9              MOV     CLKSEL,A
0003         ?C0015:
                                           ; SOURCE LINE # 554
0003 E5A9              MOV     A,CLKSEL
0005 5480              ANL     A,#080H
0007 6480              XRL     A,#080H
0009 70F8              JNZ     ?C0015
                                           ; SOURCE LINE # 558
000B 22                RET     
             ; FUNCTION CLOCK_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER01_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 560
                                           ; SOURCE LINE # 564
;---- Variable 'TCON_save' assigned to Register 'R7' ----
0000 AF88              MOV     R7,TCON
                                           ; SOURCE LINE # 566
0002 5388AF            ANL     TCON,#0AFH
                                           ; SOURCE LINE # 574
0005 758C80            MOV     TH0,#080H
                                           ; SOURCE LINE # 588
0008 EF                MOV     A,R7
0009 5440              ANL     A,#040H
000B FE                MOV     R6,A
000C EF                MOV     A,R7
000D 5410              ANL     A,#010H
000F 4E                ORL     A,R6
0010 4288              ORL     TCON,A
                                           ; SOURCE LINE # 592
0012 22                RET     
             ; FUNCTION TIMER01_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER16_2_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 594
                                           ; SOURCE LINE # 598
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 18  

0000 E5C8              MOV     A,TMR2CN0
0002 5404              ANL     A,#04H
;---- Variable 'TMR2CN0_TR2_save' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 600
0004 53C8FB            ANL     TMR2CN0,#0FBH
                                           ; SOURCE LINE # 610
0007 75CDB0            MOV     TMR2H,#0B0H
                                           ; SOURCE LINE # 617
000A 75CC3F            MOV     TMR2L,#03FH
                                           ; SOURCE LINE # 624
000D 75CBB0            MOV     TMR2RLH,#0B0H
                                           ; SOURCE LINE # 631
0010 75CA3F            MOV     TMR2RLL,#03FH
                                           ; SOURCE LINE # 638
0013 43C804            ORL     TMR2CN0,#04H
                                           ; SOURCE LINE # 643
0016 42C8              ORL     TMR2CN0,A
                                           ; SOURCE LINE # 646
0018 22                RET     
             ; FUNCTION TIMER16_2_enter_DefaultMode_from_RESET (END)

             ; FUNCTION TIMER_SETUP_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 648
                                           ; SOURCE LINE # 659
0000 758E02            MOV     CKCON0,#02H
                                           ; SOURCE LINE # 674
0003 758902            MOV     TMOD,#02H
                                           ; SOURCE LINE # 681
0006 22                RET     
             ; FUNCTION TIMER_SETUP_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION VREF_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 683
                                           ; SOURCE LINE # 691
0000 75D11C            MOV     REF0CN,#01CH
                                           ; SOURCE LINE # 695
0003 22                RET     
             ; FUNCTION VREF_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION SMBUS_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 697
                                           ; SOURCE LINE # 703
0000 75F424            MOV     SMB0ADR,#024H
                                           ; SOURCE LINE # 712
0003 75F5FF            MOV     SMB0ADM,#0FFH
                                           ; SOURCE LINE # 720
0006 53C1FC            ANL     SMB0CF,#0FCH
                                           ; SOURCE LINE # 721
0009 43C181            ORL     SMB0CF,#081H
                                           ; SOURCE LINE # 724
000C 22                RET     
             ; FUNCTION SMBUS_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION INTERRUPT_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 726
                                           ; SOURCE LINE # 737
0000 75E601            MOV     EIE1,#01H
                                           ; SOURCE LINE # 752
0003 75F601            MOV     EIP1,#01H
                                           ; SOURCE LINE # 767
0006 75A8A2            MOV     IE,#0A2H
                                           ; SOURCE LINE # 781
0009 22                RET     
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 19  

             ; FUNCTION INTERRUPT_0_enter_DefaultMode_from_RESET (END)

             ; FUNCTION FLASH_0_enter_DefaultMode_from_RESET (BEGIN)
                                           ; SOURCE LINE # 783
                                           ; SOURCE LINE # 788
0000 75B640            MOV     FLSCL,#040H
                                           ; SOURCE LINE # 791
0003 22                RET     
             ; FUNCTION FLASH_0_enter_DefaultMode_from_RESET (END)

C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 20  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


SPI0CKR. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A2H  1
uint16_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_INT    -----  2
P0 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0080H  1
PSW_OV . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D2H  1
XOSC0CN. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B1H  1
P1 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0090H  1
P2 . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A0H  1
uint64_t . . . . . . . . . . . . . . .  TYPEDEF  -----  ARRAY    -----  8
ADC0CF . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0097H  1
SI_GEN_PTR_t . . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  3
  u8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  3
  gptr . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
SMB0CN0_MASTER . . . . . . . . . . . .  ABSBIT   -----  BIT      00C7H  1
PCA0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00F9H  2
RTC0KEY. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AEH  1
EIE1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E6H  1
SMB0CN0_ACK. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C1H  1
EIE2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E7H  1
int32_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  LONG     -----  4
PSCTL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008FH  1
IT01CF . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E4H  1
CS0CN0 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B0H  1
int16_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  INT      -----  2
ADC_0_enter_DefaultMode_from_RESET . .  PUBLIC   CODE   PROC     0000H  -----
SMB0CN0_TXMODE . . . . . . . . . . . .  ABSBIT   -----  BIT      00C6H  1
DERIVID. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
CS0MD1 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AFH  1
SFRPAGE. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A7H  1
CS0MD2 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F3H  1
P0MDOUT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A4H  1
CS0MD3 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F3H  1
int64_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  ARRAY    -----  8
P1MDOUT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A5H  1
SI_UU32. . . . . . . . . . . . . . . .  * TAG *  -----  UNION    -----  4
  u32. . . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0000H  4
  s32. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  uu16 . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  u16. . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  s16. . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  u8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  s8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
ADC0CN0_ADINT. . . . . . . . . . . . .  ABSBIT   -----  BIT      00EDH  1
TMR2RLH. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CBH  1
P2MDOUT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A6H  1
IE . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A8H  1
false. . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
TMR3RLH. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0093H  1
SI_UU16. . . . . . . . . . . . . . . .  * TAG *  -----  UNION    -----  2
  u16. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  s16. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  u8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
  s8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
EIP1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F6H  1
EIP2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F7H  1
SCON0_RB8. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009AH  1
TMR2RLL. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CAH  1
PCA0CPH0 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FCH  1
INTERRUPT_0_enter_DefaultMode_from_RESETPUBLIC   CODE   PROC     0000H  -----
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 21  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TMR3RLL. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0092H  1
PCA0CPH1 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EAH  1
GPTR_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  STRUCT   -----  3
  memtype. . . . . . . . . . . . . . .  MEMBER   -----  U_CHAR   0000H  1
  address. . . . . . . . . . . . . . .  MEMBER   -----  UNION    0001H  2
SCON0_TB8. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009BH  1
CS0CN0_CSEN. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B7H  1
B_B0 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F0H  1
DP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    0082H  2
PCA0CPH2 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ECH  1
B_B1 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F1H  1
ADC0GT . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00C3H  2
PCA_0_enter_DefaultMode_from_RESET . .  PUBLIC   CODE   PROC     0000H  -----
B_B2 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F2H  1
PCA0CPL0 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FBH  1
B_B3 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F3H  1
PCA0MD . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D9H  1
PCA0CPM0 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DAH  1
PCA0CPL1 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E9H  1
B_B4 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F4H  1
PCA0CPM1 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DBH  1
PCA0CPL2 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EBH  1
B_B5 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F5H  1
PCA0CPM2 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DCH  1
IP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B8H  1
ADC0TK . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BCH  1
B_B6 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F6H  1
ADC0LT . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00C5H  2
IREF0CN0 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D6H  1
SCON0_MCE. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009DH  1
B_B7 . . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00F7H  1
XBR0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E1H  1
SMB0CF . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C1H  1
XBR1 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
CS0SCAN0 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D2H  1
SMB0CN0_STA. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C5H  1
XBR2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E3H  1
CS0SCAN1 . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D3H  1
ADC0MX . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0096H  1
ACC_ACC0 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E0H  1
REF0CN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D1H  1
HFO0CN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B2H  1
CKCON0 . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
ACC_ACC1 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E1H  1
REG0CN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C9H  1
CRC0IN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0085H  1
PCACH_0_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
TMR2CN0_TR2. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CAH  1
ACC_ACC2 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E2H  1
PCACH_1_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
ACC_ACC3 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E3H  1
SP . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0081H  1
CMP0MD . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009DH  1
PCACH_2_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
ACC_ACC4 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E4H  1
RSTSRC_0_enter_DefaultMode_from_RESET.  PUBLIC   CODE   PROC     0000H  -----
PBCFG_0_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
PCA0CN0_CCF0 . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D8H  1
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 22  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


ACC_ACC5 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E5H  1
TIMER01_0_enter_DefaultMode_from_RESET  PUBLIC   CODE   PROC     0000H  -----
  TCON_save. . . . . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
PCA0CN0_CCF1 . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D9H  1
ACC_ACC6 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E6H  1
TMR2 . . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00CCH  2
PCA0CN0_CCF2 . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DAH  1
ACC_ACC7 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00E7H  1
TMR3 . . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    0094H  2
CS0CN0_CSCMPF. . . . . . . . . . . . .  ABSBIT   -----  BIT      00B0H  1
SMB0CN0_ACKRQ. . . . . . . . . . . . .  ABSBIT   -----  BIT      00C3H  1
VDM0CN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FFH  1
P0MDIN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F1H  1
SCON0_REN. . . . . . . . . . . . . . .  ABSBIT   -----  BIT      009CH  1
P1MDIN . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F2H  1
CS0THH . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FEH  1
SMB0CN0_STO. . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C4H  1
PMU0CF . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B5H  1
TIMER16_2_enter_DefaultMode_from_RESET  PUBLIC   CODE   PROC     0000H  -----
  TMR2CN0_TR2_save . . . . . . . . . .  * REG *  DATA   U_CHAR   0007H  1
P0MASK . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C7H  1
bool . . . . . . . . . . . . . . . . .  TYPEDEF  -----  BIT      -----  1
CLOCK_0_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
P1MASK . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BFH  1
SI_GEN_PTR . . . . . . . . . . . . . .  * TAG *  -----  UNION    -----  3
  u8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  3
  gptr . . . . . . . . . . . . . . . .  MEMBER   -----  STRUCT   0000H  3
CS0THL . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FDH  1
FLASH_0_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
PSW_RS0. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D3H  1
PCA0CN0_CF . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DFH  1
SPI0CN0_RXOVRN . . . . . . . . . . . .  ABSBIT   -----  BIT      00FCH  1
PSW_RS1. . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D4H  1
TMR2CN0_T2XCLK0. . . . . . . . . . . .  ABSBIT   -----  BIT      00C8H  1
TMR2CN0_T2XCLK1. . . . . . . . . . . .  ABSBIT   -----  BIT      00C9H  1
ADC0CN0_ADEN . . . . . . . . . . . . .  ABSBIT   -----  BIT      00EFH  1
TMOD . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0089H  1
TCON . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0088H  1
PMU0MD . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B5H  1
HFOSC_0_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
PMU0FL . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CEH  1
CRC0FLIP . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009CH  1
PSW_PARITY . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D0H  1
IE_ES0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ACH  1
CMP0MX . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009FH  1
TIMER_SETUP_0_enter_DefaultMode_from_R  PUBLIC   CODE   PROC     0000H  -----
IE_ET0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A9H  1
IE_ET1 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ABH  1
P0SKIP . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D4H  1
IE_ET2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00ADH  1
P1SKIP . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D5H  1
ADC0CN0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E8H  1
IE_EX0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A8H  1
PCA0CN0_CR . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00DEH  1
IE_EX1 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AAH  1
SCON0_SMODE. . . . . . . . . . . . . .  ABSBIT   -----  BIT      009FH  1
CLKSEL . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A9H  1
SPI0CN0_SPIEN. . . . . . . . . . . . .  ABSBIT   -----  BIT      00F8H  1
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 23  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


B. . . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F0H  1
ADC0H. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BEH  1
true . . . . . . . . . . . . . . . . .  E_CONST  -----  U_CHAR   -----  1
CRC0AUTO . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009EH  1
CS0CN0_CSBUSY. . . . . . . . . . . . .  ABSBIT   -----  BIT      00B4H  1
ADC0CN0_ADBMEN . . . . . . . . . . . .  ABSBIT   -----  BIT      00EEH  1
TMR2RL . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00CAH  2
ADC0L. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BDH  1
TMR3RL . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    0092H  2
PCA0CN0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D8H  1
ACC. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E0H  1
PCA0CP0. . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00FBH  2
PCA0CP1. . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00E9H  2
PCA0CP2. . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00EBH  2
CRC0CN0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0084H  1
TH0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008CH  1
SMBUS_0_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
IP_PS0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BCH  1
TH1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
PCA0H. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00FAH  1
IP_PT0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B9H  1
IP_PT1 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BBH  1
uint8_t. . . . . . . . . . . . . . . .  TYPEDEF  -----  U_CHAR   -----  1
enter_DefaultMode_from_RESET . . . . .  PUBLIC   CODE   PROC     0000H  -----
  SFRPAGE_save . . . . . . . . . . . .  AUTO     PDATA  U_CHAR   0000H  1
SMB0CN0_ARBLOST. . . . . . . . . . . .  ABSBIT   -----  BIT      00C2H  1
IP_PT2 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BDH  1
TL0. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008AH  1
CS0CF. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00AAH  1
SPI0CN0_TXBMT. . . . . . . . . . . . .  ABSBIT   -----  BIT      00F9H  1
PSW_F0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D5H  1
IE_ESPI0 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AEH  1
TL1. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008BH  1
PCA0L. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F9H  1
SMB0CN0_SI . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00C0H  1
PSW_F1 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D1H  1
P0_B0. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0080H  1
IP_PX0 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B8H  1
P1_B0. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0090H  1
P0_B1. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0081H  1
IP_PX1 . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BAH  1
CS0DH. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EEH  1
CMP0CN0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009BH  1
TCON_IE0 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0089H  1
P1_B1. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0091H  1
P0_B2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0082H  1
TCON_IE1 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008BH  1
P1_B2. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0092H  1
P0_B3. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0083H  1
SMB0CN0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C0H  1
P1_B3. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0093H  1
P0_B4. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0084H  1
P1_B4. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0094H  1
P0_B5. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0085H  1
CS0DL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EDH  1
P1_B5. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0095H  1
P0_B6. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0086H  1
P1_B6. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0096H  1
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 24  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


P0_B7. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0087H  1
int8_t . . . . . . . . . . . . . . . .  TYPEDEF  -----  CHAR     -----  1
P1_B7. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0097H  1
PORTS_0_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
P2_B7. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00A7H  1
PORTS_1_enter_DefaultMode_from_RESET .  PUBLIC   CODE   PROC     0000H  -----
DPH. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0083H  1
ADC0GTH. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C4H  1
TMR2CN0_TF2H . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CFH  1
TMR2CN0_T2SPLIT. . . . . . . . . . . .  ABSBIT   -----  BIT      00CBH  1
PSW_AC . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D6H  1
SPI0CN0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F8H  1
HFO0CAL. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B3H  1
CS0SE. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DEH  1
TCON_TF0 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008DH  1
SCON0_RI . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0098H  1
DPL. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0082H  1
TCON_TF1 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008FH  1
SBUF0. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
PCON0. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0087H  1
IREF0CF. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B9H  1
ADC0GTL. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C3H  1
SI_UU32_t. . . . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  4
  u32. . . . . . . . . . . . . . . . .  MEMBER   -----  U_LONG   0000H  4
  s32. . . . . . . . . . . . . . . . .  MEMBER   -----  LONG     0000H  4
  uu16 . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  u16. . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  s16. . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  u8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
  s8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  4
TMR2CN0_TF2L . . . . . . . . . . . . .  ABSBIT   -----  BIT      00CEH  1
SCON0_TI . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0099H  1
ADC0CN0_ADCM0. . . . . . . . . . . . .  ABSBIT   -----  BIT      00E8H  1
ADC0LTH. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C6H  1
TCON_IT0 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      0088H  1
CS0CN0_CSPME . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B1H  1
ADC0CN0_ADCM1. . . . . . . . . . . . .  ABSBIT   -----  BIT      00E9H  1
RSTSRC . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00EFH  1
P0MAT. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D7H  1
CRC0DAT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0086H  1
SI_UU16_t. . . . . . . . . . . . . . .  TYPEDEF  -----  UNION    -----  2
  u16. . . . . . . . . . . . . . . . .  MEMBER   -----  U_INT    0000H  2
  s16. . . . . . . . . . . . . . . . .  MEMBER   -----  INT      0000H  2
  u8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
  s8 . . . . . . . . . . . . . . . . .  MEMBER   -----  ARRAY    0000H  2
TCON_IT1 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008AH  1
ADC0CN0_ADCM2. . . . . . . . . . . . .  ABSBIT   -----  BIT      00EAH  1
SCON0. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0098H  1
P1MAT. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CFH  1
CS0PM. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DEH  1
ADC0CN0_ADWINT . . . . . . . . . . . .  ABSBIT   -----  BIT      00EBH  1
ADC0CN0_ADBUSY . . . . . . . . . . . .  ABSBIT   -----  BIT      00ECH  1
SMB0ADM. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F5H  1
ADC0LTL. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C5H  1
SPI0CN0_MODF . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FDH  1
IP_PSPI0 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00BEH  1
CS0CN0_CSEOS . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B6H  1
TMR2CN0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C8H  1
C51 COMPILER V9.60.0.0   INITDEVICE                                                        02/10/2023 13:46:26 PAGE 25  

NAME                                    CLASS   MSPACE  TYPE    OFFSET  SIZE
====                                    =====   ======  ====    ======  ====


TMR3CN0. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0091H  1
SMB0ADR. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00F4H  1
TCON_TR0 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008CH  1
CS0CN0_CSINT . . . . . . . . . . . . .  ABSBIT   -----  BIT      00B5H  1
CS0MX. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ABH  1
TMR2CN0_TF2CEN . . . . . . . . . . . .  ABSBIT   -----  BIT      00CCH  1
TCON_TR1 . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      008EH  1
SMB0DAT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00C2H  1
P0DRV. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0099H  1
CS0SS. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DDH  1
TMR2H. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CDH  1
SPI0CFG. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A1H  1
P1DRV. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009BH  1
TMR3H. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0095H  1
P2DRV. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009DH  1
CRC0CNT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   009AH  1
TMR2L. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00CCH  1
RTC0ADR. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ACH  1
SPI0CN0_SPIF . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FFH  1
TMR3L. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   0094H  1
ADC0PWR. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BBH  1
IE_EA. . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00AFH  1
RTC0DAT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00ADH  1
VREF_0_enter_DefaultMode_from_RESET. .  PUBLIC   CODE   PROC     0000H  -----
CS0CN0_CSCMPEN . . . . . . . . . . . .  ABSBIT   -----  BIT      00B3H  1
FLSCL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B6H  1
VREG_0_enter_DefaultMode_from_RESET. .  PUBLIC   CODE   PROC     0000H  -----
TMR2CN0_TF2LEN . . . . . . . . . . . .  ABSBIT   -----  BIT      00CDH  1
SPI0CN0_WCOL . . . . . . . . . . . . .  ABSBIT   -----  BIT      00FEH  1
SPI0CN0_NSSMD0 . . . . . . . . . . . .  ABSBIT   -----  BIT      00FAH  1
PSW_CY . . . . . . . . . . . . . . . .  ABSBIT   -----  BIT      00D7H  1
SPI0DAT. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00A3H  1
SPI0CN0_NSSMD1 . . . . . . . . . . . .  ABSBIT   -----  BIT      00FBH  1
ADC0 . . . . . . . . . . . . . . . . .  SFR      DATA   U_INT    00BDH  2
TOFFH. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008EH  1
PSW. . . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00D0H  1
PCA0PWM. . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00DFH  1
REVID. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00E2H  1
TOFFL. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   008DH  1
FLKEY. . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00B7H  1
uint32_t . . . . . . . . . . . . . . .  TYPEDEF  -----  U_LONG   -----  4
ADC0AC . . . . . . . . . . . . . . . .  SFR      DATA   U_CHAR   00BAH  1


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    298    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----       1
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
